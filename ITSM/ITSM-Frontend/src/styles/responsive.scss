// =============================================================================
// Responsive Design Utilities for ITSM Tool
// =============================================================================

@import 'variables';

// Breakpoint Mixins
// =============================================================================

@mixin breakpoint($size) {
  @if $size == xs {
    @media (min-width: #{$breakpoint-xs}) {
      @content;
    }
  } @else if $size == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  } @else if $size == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  } @else if $size == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  } @else if $size == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  } @else if $size == xxl {
    @media (min-width: #{$breakpoint-xxl}) {
      @content;
    }
  }
}

@mixin breakpoint-down($size) {
  @if $size == xs {
    @media (max-width: #{$breakpoint-sm - 1px}) {
      @content;
    }
  } @else if $size == sm {
    @media (max-width: #{$breakpoint-md - 1px}) {
      @content;
    }
  } @else if $size == md {
    @media (max-width: #{$breakpoint-lg - 1px}) {
      @content;
    }
  } @else if $size == lg {
    @media (max-width: #{$breakpoint-xl - 1px}) {
      @content;
    }
  } @else if $size == xl {
    @media (max-width: #{$breakpoint-xxl - 1px}) {
      @content;
    }
  }
}

@mixin breakpoint-between($lower, $upper) {
  $min: map-get((xs: $breakpoint-xs, sm: $breakpoint-sm, md: $breakpoint-md, lg: $breakpoint-lg, xl: $breakpoint-xl, xxl: $breakpoint-xxl), $lower);
  $max: map-get((xs: $breakpoint-sm - 1px, sm: $breakpoint-md - 1px, md: $breakpoint-lg - 1px, lg: $breakpoint-xl - 1px, xl: $breakpoint-xxl - 1px), $upper);
  
  @media (min-width: #{$min}) and (max-width: #{$max}) {
    @content;
  }
}

// Container System
// =============================================================================

.container {
  width: 100%;
  padding-right: $spacing-4;
  padding-left: $spacing-4;
  margin-right: auto;
  margin-left: auto;

  @include breakpoint(sm) {
    max-width: map-get($container-max-widths, sm);
  }

  @include breakpoint(md) {
    max-width: map-get($container-max-widths, md);
  }

  @include breakpoint(lg) {
    max-width: map-get($container-max-widths, lg);
  }

  @include breakpoint(xl) {
    max-width: map-get($container-max-widths, xl);
  }

  @include breakpoint(xxl) {
    max-width: map-get($container-max-widths, xxl);
  }
}

.container-fluid {
  width: 100%;
  padding-right: $spacing-4;
  padding-left: $spacing-4;
  margin-right: auto;
  margin-left: auto;
}

// Grid System
// =============================================================================

.row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -($grid-gutter-width / 2);
  margin-left: -($grid-gutter-width / 2);
}

.col {
  flex: 1 0 0%;
  padding-right: ($grid-gutter-width / 2);
  padding-left: ($grid-gutter-width / 2);
}

// Generate column classes
@for $i from 1 through $grid-columns {
  .col-#{$i} {
    flex: 0 0 percentage($i / $grid-columns);
    max-width: percentage($i / $grid-columns);
    padding-right: ($grid-gutter-width / 2);
    padding-left: ($grid-gutter-width / 2);
  }
}

// Responsive column classes
@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .col-#{$breakpoint} {
      flex: 1 0 0%;
      padding-right: ($grid-gutter-width / 2);
      padding-left: ($grid-gutter-width / 2);
    }

    @for $i from 1 through $grid-columns {
      .col-#{$breakpoint}-#{$i} {
        flex: 0 0 percentage($i / $grid-columns);
        max-width: percentage($i / $grid-columns);
        padding-right: ($grid-gutter-width / 2);
        padding-left: ($grid-gutter-width / 2);
      }
    }
  }
}

// Responsive Utilities
// =============================================================================

// Display utilities
.d-none { display: none !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-block { display: block !important; }
.d-table { display: table !important; }
.d-table-row { display: table-row !important; }
.d-table-cell { display: table-cell !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .d-#{$breakpoint}-none { display: none !important; }
    .d-#{$breakpoint}-inline { display: inline !important; }
    .d-#{$breakpoint}-inline-block { display: inline-block !important; }
    .d-#{$breakpoint}-block { display: block !important; }
    .d-#{$breakpoint}-table { display: table !important; }
    .d-#{$breakpoint}-table-row { display: table-row !important; }
    .d-#{$breakpoint}-table-cell { display: table-cell !important; }
    .d-#{$breakpoint}-flex { display: flex !important; }
    .d-#{$breakpoint}-inline-flex { display: inline-flex !important; }
  }
}

// Flexbox utilities
.flex-row { flex-direction: row !important; }
.flex-column { flex-direction: column !important; }
.flex-row-reverse { flex-direction: row-reverse !important; }
.flex-column-reverse { flex-direction: column-reverse !important; }

.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-wrap-reverse { flex-wrap: wrap-reverse !important; }

.justify-content-start { justify-content: flex-start !important; }
.justify-content-end { justify-content: flex-end !important; }
.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.justify-content-around { justify-content: space-around !important; }
.justify-content-evenly { justify-content: space-evenly !important; }

.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }
.align-items-center { align-items: center !important; }
.align-items-baseline { align-items: baseline !important; }
.align-items-stretch { align-items: stretch !important; }

.align-content-start { align-content: flex-start !important; }
.align-content-end { align-content: flex-end !important; }
.align-content-center { align-content: center !important; }
.align-content-between { align-content: space-between !important; }
.align-content-around { align-content: space-around !important; }
.align-content-stretch { align-content: stretch !important; }

.align-self-auto { align-self: auto !important; }
.align-self-start { align-self: flex-start !important; }
.align-self-end { align-self: flex-end !important; }
.align-self-center { align-self: center !important; }
.align-self-baseline { align-self: baseline !important; }
.align-self-stretch { align-self: stretch !important; }

.flex-fill { flex: 1 1 auto !important; }
.flex-grow-0 { flex-grow: 0 !important; }
.flex-grow-1 { flex-grow: 1 !important; }
.flex-shrink-0 { flex-shrink: 0 !important; }
.flex-shrink-1 { flex-shrink: 1 !important; }

// Text utilities
.text-left { text-align: left !important; }
.text-right { text-align: right !important; }
.text-center { text-align: center !important; }
.text-justify { text-align: justify !important; }

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .text-#{$breakpoint}-left { text-align: left !important; }
    .text-#{$breakpoint}-right { text-align: right !important; }
    .text-#{$breakpoint}-center { text-align: center !important; }
    .text-#{$breakpoint}-justify { text-align: justify !important; }
  }
}

// Visibility utilities
.visible { visibility: visible !important; }
.invisible { visibility: hidden !important; }

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .visible-#{$breakpoint} { visibility: visible !important; }
    .invisible-#{$breakpoint} { visibility: hidden !important; }
  }
}

// Spacing utilities (responsive)
$spacers: (
  0: 0,
  1: $spacing-1,
  2: $spacing-2,
  3: $spacing-3,
  4: $spacing-4,
  5: $spacing-5,
  6: $spacing-6,
  7: $spacing-7,
  8: $spacing-8,
  9: $spacing-9,
  10: $spacing-10,
  12: $spacing-12,
  16: $spacing-16,
  20: $spacing-20,
  24: $spacing-24
);

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .#{$abbrev}-#{$breakpoint}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}t-#{$breakpoint}-#{$size} { #{$prop}-top: $length !important; }
        .#{$abbrev}r-#{$breakpoint}-#{$size} { #{$prop}-right: $length !important; }
        .#{$abbrev}b-#{$breakpoint}-#{$size} { #{$prop}-bottom: $length !important; }
        .#{$abbrev}l-#{$breakpoint}-#{$size} { #{$prop}-left: $length !important; }
        .#{$abbrev}x-#{$breakpoint}-#{$size} {
          #{$prop}-right: $length !important;
          #{$prop}-left: $length !important;
        }
        .#{$abbrev}y-#{$breakpoint}-#{$size} {
          #{$prop}-top: $length !important;
          #{$prop}-bottom: $length !important;
        }
      }
    }
  }
}

// Width utilities
.w-25 { width: 25% !important; }
.w-50 { width: 50% !important; }
.w-75 { width: 75% !important; }
.w-100 { width: 100% !important; }
.w-auto { width: auto !important; }

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .w-#{$breakpoint}-25 { width: 25% !important; }
    .w-#{$breakpoint}-50 { width: 50% !important; }
    .w-#{$breakpoint}-75 { width: 75% !important; }
    .w-#{$breakpoint}-100 { width: 100% !important; }
    .w-#{$breakpoint}-auto { width: auto !important; }
  }
}

// Height utilities
.h-25 { height: 25% !important; }
.h-50 { height: 50% !important; }
.h-75 { height: 75% !important; }
.h-100 { height: 100% !important; }
.h-auto { height: auto !important; }

// Position utilities
.position-static { position: static !important; }
.position-relative { position: relative !important; }
.position-absolute { position: absolute !important; }
.position-fixed { position: fixed !important; }
.position-sticky { position: sticky !important; }

// Float utilities
.float-left { float: left !important; }
.float-right { float: right !important; }
.float-none { float: none !important; }

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .float-#{$breakpoint}-left { float: left !important; }
    .float-#{$breakpoint}-right { float: right !important; }
    .float-#{$breakpoint}-none { float: none !important; }
  }
}

// Clearfix utility
.clearfix::after {
  display: block;
  content: "";
  clear: both;
}

// Responsive Layout Patterns
// =============================================================================

// ITSM Specific Layout Classes
.itsm-layout {
  display: flex;
  min-height: 100vh;
  flex-direction: column;

  @include breakpoint(md) {
    flex-direction: row;
  }
}

.itsm-header {
  background: $header-bg;
  border-bottom: 1px solid $header-border;
  box-shadow: $header-shadow;
  position: sticky;
  top: 0;
  z-index: $z-index-sticky;
  height: $header-height;

  @include breakpoint-down(md) {
    order: -1;
  }
}

.itsm-sidebar {
  background: $sidebar-bg;
  border-right: 1px solid $sidebar-border;
  width: $sidebar-width;
  transition: $transition-all;
  position: fixed;
  left: -$sidebar-width;
  top: 0;
  height: 100vh;
  z-index: $z-index-fixed;

  @include breakpoint(md) {
    position: relative;
    left: 0;
    flex-shrink: 0;
  }

  &.collapsed {
    width: $sidebar-collapsed-width;
  }

  &.open {
    left: 0;
  }
}

.itsm-main {
  flex: 1;
  padding: $spacing-4;
  background: $gray-50;
  overflow-x: auto;

  @include breakpoint(md) {
    padding: $spacing-6;
  }

  @include breakpoint(lg) {
    padding: $spacing-8;
  }
}

.itsm-content {
  max-width: 100%;
  margin: 0 auto;
}

// Mobile Navigation
.mobile-nav-toggle {
  display: block;
  background: none;
  border: none;
  padding: $spacing-2;
  cursor: pointer;

  @include breakpoint(md) {
    display: none;
  }
}

.mobile-nav-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba($black, 0.5);
  z-index: $z-index-modal-backdrop;
  display: none;

  &.show {
    display: block;
  }

  @include breakpoint(md) {
    display: none !important;
  }
}

// Responsive Tables
.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;

  > .table {
    margin-bottom: 0;
  }
}

@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  @include breakpoint($breakpoint) {
    .table-responsive-#{$breakpoint} {
      display: block;
      width: 100%;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;

      > .table {
        margin-bottom: 0;
      }
    }
  }
}

// Responsive Cards
.card-responsive {
  @include breakpoint-down(sm) {
    .card-header,
    .card-body,
    .card-footer {
      padding: $spacing-4;
    }
  }
}

// Responsive Forms
.form-responsive {
  .form-group {
    margin-bottom: $spacing-4;

    @include breakpoint(md) {
      margin-bottom: $spacing-6;
    }
  }

  .form-row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -$spacing-2;
    margin-left: -$spacing-2;

    > .form-group {
      flex: 1 0 100%;
      padding-right: $spacing-2;
      padding-left: $spacing-2;

      @include breakpoint(sm) {
        flex: 1 0 50%;
      }

      @include breakpoint(md) {
        flex: 1 0 33.333333%;
      }

      &.full-width {
        flex: 1 0 100%;
      }

      &.half-width {
        @include breakpoint(sm) {
          flex: 1 0 50%;
        }
      }

      &.third-width {
        @include breakpoint(md) {
          flex: 1 0 33.333333%;
        }
      }

      &.quarter-width {
        @include breakpoint(lg) {
          flex: 1 0 25%;
        }
      }
    }
  }
}

// Responsive Buttons
.btn-responsive {
  width: 100%;

  @include breakpoint(sm) {
    width: auto;
  }
}

.btn-group-responsive {
  display: flex;
  flex-direction: column;
  gap: $spacing-2;

  @include breakpoint(sm) {
    flex-direction: row;
  }

  .btn {
    flex: 1;

    @include breakpoint(sm) {
      flex: 0 0 auto;
    }
  }
}

// Responsive Modals
.modal-responsive {
  .modal-dialog {
    margin: $spacing-4;

    @include breakpoint(sm) {
      margin: $spacing-8 auto;
      max-width: 500px;
    }

    @include breakpoint(md) {
      max-width: 700px;
    }

    @include breakpoint(lg) {
      max-width: 900px;
    }

    &.modal-fullscreen {
      width: 100%;
      max-width: none;
      margin: 0;
      height: 100%;

      .modal-content {
        height: 100%;
        border: 0;
        border-radius: 0;
      }
    }
  }
}

// Responsive Dashboards
.dashboard-responsive {
  .dashboard-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: $spacing-4;

    @include breakpoint(sm) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include breakpoint(md) {
      grid-template-columns: repeat(3, 1fr);
    }

    @include breakpoint(lg) {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .dashboard-card {
    background: $white;
    border-radius: $border-radius-lg;
    box-shadow: $shadow-base;
    padding: $spacing-4;

    @include breakpoint(md) {
      padding: $spacing-6;
    }

    &.span-2 {
      @include breakpoint(sm) {
        grid-column: span 2;
      }
    }

    &.span-3 {
      @include breakpoint(md) {
        grid-column: span 3;
      }
    }

    &.span-4 {
      @include breakpoint(lg) {
        grid-column: span 4;
      }
    }
  }
}

// Responsive Typography
.responsive-text {
  font-size: $font-size-sm;

  @include breakpoint(sm) {
    font-size: $font-size-base;
  }

  @include breakpoint(md) {
    font-size: $font-size-lg;
  }
}

.responsive-title {
  font-size: $font-size-xl;
  line-height: $line-height-tight;

  @include breakpoint(sm) {
    font-size: $font-size-2xl;
  }

  @include breakpoint(md) {
    font-size: $font-size-3xl;
  }

  @include breakpoint(lg) {
    font-size: $font-size-4xl;
  }
}

// Hide/Show utilities for specific breakpoints
@each $breakpoint in (xs, sm, md, lg, xl, xxl) {
  .hide-#{$breakpoint} {
    @include breakpoint($breakpoint) {
      display: none !important;
    }
  }

  .show-#{$breakpoint} {
    display: none !important;
    
    @include breakpoint($breakpoint) {
      display: block !important;
    }
  }

  .show-#{$breakpoint}-flex {
    display: none !important;
    
    @include breakpoint($breakpoint) {
      display: flex !important;
    }
  }

  .show-#{$breakpoint}-inline {
    display: none !important;
    
    @include breakpoint($breakpoint) {
      display: inline !important;
    }
  }
}

// Print utilities
@media print {
  .d-print-none { display: none !important; }
  .d-print-inline { display: inline !important; }
  .d-print-inline-block { display: inline-block !important; }
  .d-print-block { display: block !important; }
  .d-print-table { display: table !important; }
  .d-print-table-row { display: table-row !important; }
  .d-print-table-cell { display: table-cell !important; }
  .d-print-flex { display: flex !important; }
  .d-print-inline-flex { display: inline-flex !important; }
}

// Responsive Image utilities
.img-responsive {
  max-width: 100%;
  height: auto;
  display: block;
}

.img-fluid {
  max-width: 100%;
  height: auto;
}

// Responsive Video utilities
.video-responsive {
  position: relative;
  padding-bottom: 56.25%; // 16:9 aspect ratio
  height: 0;
  overflow: hidden;

  iframe,
  object,
  embed,
  video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Responsive Navigation
.nav-responsive {
  .nav-item {
    .nav-link {
      padding: $spacing-3 $spacing-4;
      display: block;
      text-decoration: none;
      color: $gray-700;
      transition: $transition-colors;

      &:hover,
      &.active {
        color: $primary-color;
        background-color: $primary-50;
      }
    }
  }

  @include breakpoint-down(md) {
    .nav-item {
      border-bottom: 1px solid $gray-200;

      &:last-child {
        border-bottom: none;
      }
    }
  }
}

// Responsive Breadcrumbs
.breadcrumb-responsive {
  .breadcrumb-item {
    font-size: $font-size-sm;

    @include breakpoint-down(sm) {
      &:not(:last-child) {
        display: none;
      }

      &:nth-last-child(2) {
        display: inline-flex;
      }
    }
  }
}